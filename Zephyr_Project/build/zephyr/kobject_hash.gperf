%compare-lengths
%define lookup-function-name z_object_lookup
%language=ANSI-C
%global-table
%struct-type
%{
#include <kernel.h>
#include <toolchain.h>
#include <syscall_handler.h>
#include <string.h>
%}
struct z_object;
static struct z_futex_data futex_data[4] = {
Z_FUTEX_DATA_INITIALIZER(futex_data[0]), Z_FUTEX_DATA_INITIALIZER(futex_data[1]), Z_FUTEX_DATA_INITIALIZER(futex_data[2]), Z_FUTEX_DATA_INITIALIZER(futex_data[3])};
%%
"\x20\xa1\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_UART, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x50\xa1\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_UART, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xb0\xa1\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_IVSHMEM, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xe0\xa1\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_IVSHMEM, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x10\xa2\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_IVSHMEM, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x40\xa2\x11\x00\x00\x00\x00\x00", {}, K_OBJ_DRIVER_IVSHMEM, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x00\x60\x12\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 0 }
"\x00\x65\x12\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 1 }
"\x78\x6b\x12\x00\x00\x00\x00\x00", {}, K_OBJ_POLL_SIGNAL, 0, { .unused = 0 }
"\x90\x6b\x12\x00\x00\x00\x00\x00", {}, K_OBJ_POLL_SIGNAL, 0, { .unused = 0 }
"\xa8\x6b\x12\x00\x00\x00\x00\x00", {}, K_OBJ_POLL_SIGNAL, 0, { .unused = 0 }
"\xc0\x6b\x12\x00\x00\x00\x00\x00", {}, K_OBJ_POLL_SIGNAL, 0, { .unused = 0 }
"\x78\x6c\x12\x00\x00\x00\x00\x00", {}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xa0\x6c\x12\x00\x00\x00\x00\x00", {}, K_OBJ_TIMER, 0, { .unused = 0 }
"\xa0\x7b\x12\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 2 }
"\x80\x7f\x12\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 4 }
"\x60\x83\x12\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 3 }
"\xc0\xc8\x1b\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD, 0, { .thread_id = 5 }
"\x00\x70\x5d\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD_STACK_ELEMENT, 0, { .stack_size = 12288 }
"\x00\xa0\x5d\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD_STACK_ELEMENT, 0, { .stack_size = 12288 }
"\x00\xd0\x5d\x00\x00\x00\x00\x00", {}, K_OBJ_THREAD_STACK_ELEMENT, 0, { .stack_size = 16384 }
"\x00\x11\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_FUTEX, 0, { .futex_data = &futex_data[3] }
"\x80\x11\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_FUTEX, 0, { .futex_data = &futex_data[2] }
"\x00\x12\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_FUTEX, 0, { .futex_data = &futex_data[1] }
"\x80\x12\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_FUTEX, 0, { .futex_data = &futex_data[0] }
"\x70\x13\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_POLL_SIGNAL, 0, { .unused = 0 }
"\xd0\x14\x5e\x00\x00\x00\x00\x00", {}, K_OBJ_STACK, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
%%
struct z_object *z_object_gperf_find(const void *obj)
{
    return z_object_lookup((const char *)obj, sizeof(void *));
}

void z_object_gperf_wordlist_foreach(_wordlist_cb_func_t func, void *context)
{
    int i;

    for (i = MIN_HASH_VALUE; i <= MAX_HASH_VALUE; i++) {
        if (wordlist[i].name != NULL) {
            func(&wordlist[i], context);
        }
    }
}

#ifndef CONFIG_DYNAMIC_OBJECTS
struct z_object *z_object_find(const void *obj)
	ALIAS_OF(z_object_gperf_find);

void z_object_wordlist_foreach(_wordlist_cb_func_t func, void *context)
	ALIAS_OF(z_object_gperf_wordlist_foreach);
#endif

uint8_t _thread_idx_map[4] = { 0xc0,  0xff,  0xff,  0xff, };
